@use "./variables" as v;

// ===============
// Layout helpers
// ===============
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// ===============
// Card
// ===============
@mixin card-base {
  background: v.$white;
  border: 2px solid v.$border-color;
  border-radius: 1rem;
  padding: v.$spacing-lg;
  margin-bottom: v.$spacing-md;
  box-shadow: v.$shadow-base;
  transition: v.$transition-all;
  &:hover {
    transform: translateY(-2px);
    box-shadow: v.$shadow-hover;
  }
}

// FoodHub Card Style
@mixin card {
  background: v.$bg-primary;
  border-radius: v.$radius-lg;
  border: 2px solid v.$border-color;
  padding: v.$spacing-6;
  box-shadow: v.$shadow-lg;
  transition: v.$transition-all;
}
@mixin card-hover {
  &:hover {
    box-shadow: v.$shadow-xl;
    transform: translateY(-2px);
  }
}

// ===============
// Buttons
// ===============
@mixin button-base {
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  font-family: v.$font-family;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  &:hover {
    opacity: 0.5;
  }
}

@mixin button-primary {
  @include button-base;
  background: v.$primary;
  color: v.$white;
  box-shadow: v.$shadow-base;

  &:hover {
    background: v.$primary-hover;
    transform: translateY(-1px);
    box-shadow: v.$shadow-hover;
  }
}

@mixin button-secondary {
  @include button-base;
  background: v.$white;
  color: v.$text-primary;
  border: 2px solid v.$border-color;

  &:hover {
    background: v.$primary-light;
    border-color: v.$primary;
    transform: translateY(-1px);
  }
}

// ===============
// Forms
// ===============
@mixin form-input {
  padding: 0.75rem;
  border: 2px solid #e2e8f0;
  border-radius: 1rem;
  font-size: 0.875rem;
  font-family: v.$font-family;
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: v.$primary;
    box-shadow: 0 0 0 3px rgba(2, 132, 199, 0.1);
  }
}

// ===============
// Responsive (giữ cả alias cũ & mới)
// ===============
@mixin mobile {
  @media (max-width: v.$mobile) {
    @content;
  }
}
@mixin tablet {
  @media (max-width: v.$tablet) {
    @content;
  }
}
@mixin desktop {
  @media (min-width: v.$desktop) {
    @content;
  }
}

@mixin r-mobile {
  @media (max-width: #{v.$breakpoint-md - 1px}) {
    @content;
  }
}
@mixin r-tablet {
  @media (min-width: v.$breakpoint-md) and (max-width: #{v.$breakpoint-lg - 1px}) {
    @content;
  }
}
@mixin r-desktop {
  @media (min-width: v.$breakpoint-lg) {
    @content;
  }
}

// ===============
// Animations & Utils
// ===============
@mixin fade-in {
  animation: fadeIn v.$transition-base ease-in-out;
  -webkit-animation: fadeIn v.$transition-base ease-in-out;
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@mixin pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
@keyframes pulse {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  &::-webkit-scrollbar-track {
    background: v.$gray-100;
    border-radius: 3px;
  }
  &::-webkit-scrollbar-thumb {
    background: v.$gray-300;
    border-radius: 3px;
    &:hover {
      background: v.$gray-400;
    }
  }
}

@mixin glass-effect {
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.9);
}

@mixin gradient-primary {
  background: linear-gradient(
    135deg,
    v.$primary-blue 0%,
    v.$primary-blue-dark 100%
  );
}

@mixin gradient-avatar($from, $to) {
  background: linear-gradient(135deg, $from 0%, $to 100%);
}

// helpers
@function custom-darken($color, $amount) {
  $l: lightness($color) - $amount;
  @return hsl(hue($color), saturation($color), max(0, min(100%, $l)));
}
@function custom-lighten($color, $amount) {
  $l: lightness($color) + $amount;
  @return hsl(hue($color), saturation($color), max(0, min(100%, $l)));
}
