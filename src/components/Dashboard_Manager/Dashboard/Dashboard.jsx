import React, { useState, useEffect } from "react";
import Card from "../Common/Card/Card";
import Button from "../Common/Button/Button";
import { useRouter } from "../../hooks/useRouter";
import "./Dashboard.scss";

const Dashboard = () => {
  const { navigate } = useRouter();
  const [stats, setStats] = useState({
    totalRevenue: 0,
    totalOrders: 0,
    totalCustomers: 0,
    totalStaff: 0,
  });
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate API call
    setTimeout(() => {
      setStats({
        totalRevenue: 125000000,
        totalOrders: 1234,
        totalCustomers: 567,
        totalStaff: 25,
      });
      setLoading(false);
    }, 1000);
  }, []);

  const statsCards = [
    {
      title: "Doanh thu h√¥m nay",
      value: stats.totalRevenue.toLocaleString("vi-VN"),
      unit: "VNƒê",
      icon: "üí∞",
      color: "success",
      change: "+12.5%",
      changeType: "increase",
    },
    {
      title: "ƒê∆°n h√†ng",
      value: stats.totalOrders.toLocaleString("vi-VN"),
      unit: "ƒë∆°n",
      icon: "üìã",
      color: "primary",
      change: "+8.2%",
      changeType: "increase",
    },
    {
      title: "Kh√°ch h√†ng",
      value: stats.totalCustomers.toLocaleString("vi-VN"),
      unit: "ng∆∞·ªùi",
      icon: "üë•",
      color: "warning",
      change: "+15.3%",
      changeType: "increase",
    },
    {
      title: "Nh√¢n vi√™n",
      value: stats.totalStaff.toLocaleString("vi-VN"),
      unit: "ng∆∞·ªùi",
      icon: "üë®‚Äçüíº",
      color: "info",
      change: "0%",
      changeType: "stable",
    },
  ];

  const quickActions = [
    {
      title: "Qu·∫£n l√Ω Nh√¢n vi√™n",
      description: "Xem danh s√°ch, ch·∫•m c√¥ng v√† qu·∫£n l√Ω l∆∞∆°ng th∆∞·ªüng",
      icon: "üë•",
      color: "primary",
      action: () => navigate("/manager/staff/overview"),
    },
    {
      title: "Qu·∫£n l√Ω Th·ª±c ƒë∆°n",
      description: "Th√™m, s·ª≠a, x√≥a m√≥n ƒÉn v√† c·∫≠p nh·∫≠t gi√° c·∫£",
      icon: "üçΩÔ∏è",
      color: "success",
      action: () => navigate("/manager/menu"),
    },
    {
      title: "Xem ƒê∆°n h√†ng",
      description: "Theo d√µi v√† x·ª≠ l√Ω c√°c ƒë∆°n h√†ng m·ªõi",
      icon: "üìã",
      color: "warning",
      action: () => navigate("/manager/orders"),
    },
    {
      title: "B√°o c√°o Doanh thu",
      description: "Xem th·ªëng k√™ v√† ph√¢n t√≠ch doanh thu",
      icon: "üìà",
      color: "info",
      action: () => navigate("/manager/reports"),
    },
  ];

  const recentActivities = [
    {
      id: 1,
      type: "order",
      title: "ƒê∆°n h√†ng m·ªõi #1234",
      description: "Kh√°ch h√†ng Nguy·ªÖn VƒÉn A ƒë√£ ƒë·∫∑t 3 m√≥n",
      time: "5 ph√∫t tr∆∞·ªõc",
      icon: "üõí",
    },
    {
      id: 2,
      type: "staff",
      title: "Nh√¢n vi√™n check-in",
      description: "Tr·∫ßn Th·ªã B ƒë√£ check-in ca s√°ng",
      time: "10 ph√∫t tr∆∞·ªõc",
      icon: "üë§",
    },
    {
      id: 3,
      type: "inventory",
      title: "C·∫£nh b√°o t·ªìn kho",
      description: 'Nguy√™n li·ªáu "Th·ªãt b√≤" s·∫Øp h·∫øt',
      time: "15 ph√∫t tr∆∞·ªõc",
      icon: "‚ö†Ô∏è",
    },
    {
      id: 4,
      type: "payment",
      title: "Thanh to√°n th√†nh c√¥ng",
      description: "ƒê∆°n h√†ng #1230 ƒë√£ ƒë∆∞·ª£c thanh to√°n",
      time: "20 ph√∫t tr∆∞·ªõc",
      icon: "üí≥",
    },
  ];

  if (loading) {
    return (
      <div className="dashboard">
        <div className="dashboard__loading">
          <div className="loading-spinner" />
          <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="dashboard">
      <div className="dashboard__header">
        <div className="dashboard__title">
          <h1>T·ªïng quan h·ªá th·ªëng</h1>
          <p>Ch√†o m·ª´ng b·∫°n quay tr·ªü l·∫°i! ƒê√¢y l√† t√¨nh h√¨nh ho·∫°t ƒë·ªông h√¥m nay.</p>
        </div>
        <div className="dashboard__actions">
          <Button variant="secondary">
            <i className="fas fa-download" />
            Xu·∫•t b√°o c√°o
          </Button>
          <Button variant="primary">
            <i className="fas fa-plus" />
            Th√™m m·ªõi
          </Button>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="dashboard__stats">
        {statsCards.map((stat, index) => (
          <Card key={index} className="stat-card" hover>
            <div className="stat-card__content">
              <div className="stat-card__header">
                <div className="stat-card__icon">
                  <span>{stat.icon}</span>
                </div>
                <div
                  className={`stat-card__change stat-card__change--${stat.changeType}`}
                >
                  <i
                    className={`fas fa-arrow-${
                      stat.changeType === "increase"
                        ? "up"
                        : stat.changeType === "decrease"
                        ? "down"
                        : "right"
                    }`}
                  />
                  {stat.change}
                </div>
              </div>
              <div className="stat-card__body">
                <h3 className="stat-card__title">{stat.title}</h3>
                <div className="stat-card__value">
                  <span className="value">{stat.value}</span>
                  <span className="unit">{stat.unit}</span>
                </div>
              </div>
            </div>
          </Card>
        ))}
      </div>

      <div className="dashboard__content">
        {/* Quick Actions */}
        <div className="dashboard__section">
          <Card>
            <div className="section-header">
              <h2>Thao t√°c nhanh</h2>
              <p>C√°c t√≠nh nƒÉng th∆∞·ªùng s·ª≠ d·ª•ng</p>
            </div>
            <div className="quick-actions">
              {quickActions.map((action, index) => (
                <div
                  key={index}
                  className="quick-action"
                  onClick={action.action}
                >
                  <div className="quick-action__icon">
                    <span>{action.icon}</span>
                  </div>
                  <div className="quick-action__content">
                    <h3>{action.title}</h3>
                    <p>{action.description}</p>
                  </div>
                  <div className="quick-action__arrow">
                    <i className="fas fa-chevron-right" />
                  </div>
                </div>
              ))}
            </div>
          </Card>
        </div>

        {/* Recent Activities */}
        <div className="dashboard__section">
          <Card>
            <div className="section-header">
              <h2>Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h2>
              <Button variant="secondary" size="sm">
                Xem t·∫•t c·∫£
              </Button>
            </div>
            <div className="recent-activities">
              {recentActivities.map((activity) => (
                <div key={activity.id} className="activity-item">
                  <div className="activity-item__icon">
                    <span>{activity.icon}</span>
                  </div>
                  <div className="activity-item__content">
                    <h4>{activity.title}</h4>
                    <p>{activity.description}</p>
                    <span className="activity-time">{activity.time}</span>
                  </div>
                </div>
              ))}
            </div>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
